# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    tenant_db_credentials: ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Migrations/'
            - '../src/Kernel.php'

    Symfony\Component\DependencyInjection\ContainerInterface: '@service_container'
    
    League\OAuth2\Server\Repositories\AccessTokenRepositoryInterface:
        class: App\Repository\Main\AccessTokenRepository
        decorates: 'League\Bundle\OAuth2ServerBundle\Repository\AccessTokenRepository'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\UserResolveListener:
        arguments: 
            - '@security.user_providers'
            - '@security.password_hasher'
        tags:
            - { name: kernel.event_listener, event: league.oauth2_server.event.user_resolve, method: onUserResolve }
    
    League\Bundle\OAuth2ServerBundle\Entity\AccessToken:
        class: App\Entity\Main\AccessToken

    App\Serializer\Normalizer\UserNormalizer:
        calls:
            # - setNormalizer: ['@serializer.normalizer.object']
            -   setBaseNormalizer: ['@serializer.normalizer.object']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Hakam\MultiTenancyBundle\Services\TenantDbConfigurationInterface:
    #     class: Hakam\MultiTenancyBundle\Services\TenantDbConfigurationInterface
    #     autowire: true
